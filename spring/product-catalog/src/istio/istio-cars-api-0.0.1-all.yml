kind: Deployment
metadata:
  annotations:
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=product-catalog&var-version=0.0.1
    sidecar.istio.io/status: injected-version-root@cc5c34bbd1ee-0.4.0-24089ea97c8d244493c93b499a666ddf4010b547
  creationTimestamp: null
  labels:
    app: product-catalog
    group: com.redhat.developers
    provider: fabric8
    version: 0.0.1
  name: product-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-catalog
      group: com.redhat.developers
      provider: fabric8
  strategy: {}
  template:
    metadata:
      annotations:
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=product-catalog&var-version=0.0.1
        sidecar.istio.io/status: injected-version-root@cc5c34bbd1ee-0.4.0-24089ea97c8d244493c93b499a666ddf4010b547
      creationTimestamp: null
      labels:
        app: product-catalog
        group: com.redhat.developers
        provider: fabric8
        version: 0.0.1
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: JAVA_OPTIONS
          value: -Dspring.profiles.active=openshift -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit
        image: 172.30.1.1:5000/product/product-catalog:latest
        imagePullPolicy: IfNotPresent
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        resources: {}
        securityContext:
          privileged: false
        volumeMounts:
        - name: keystore-volume
          mountPath: /var/run/secrets/java.io/keystores

      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - product-catalog
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:15003
        - --discoveryRefreshDelay
        - 1s
        - --zipkinAddress
        - zipkin.istio-system:9411
        - --connectTimeout
        - 10s
        - --statsdUdpAddress
        - istio-mixer.istio-system:9125
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.4.0
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources: {}
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
        name: pem-to-truststore
        image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
        env:
          - name: ca_bundle
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: truststore_jks
            value: /var/run/secrets/java.io/keystores/truststore.jks
          - name: password
            value: changeit    
        command: ['/bin/bash']
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores 
      - args:
        - -p
        - "15001"
        - -u
        - "1337"
        image: docker.io/istio/proxy_init:0.4.0
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: true
      - args:
        - -c
        - sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t && ulimit -c
          unlimited
        command:
        - /bin/sh
        image: alpine
        imagePullPolicy: IfNotPresent
        name: enable-core-dump
        resources: {}
        securityContext:
          privileged: true
      volumes:
      - emptyDir:
          medium: Memory
          sizeLimit: "0"
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.default
      - name: keystore-volume
        emptyDir: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    expose: "true"
    app: product-catalog
    provider: fabric8
    version: 0.0.1
    group: com.redhat.developers
  name: product-catalog
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: product-catalog
    provider: fabric8
    group: com.redhat.developers
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    expose: "true"
    app: product-catalog
    provider: fabric8
    version: 0.0.1
    group: com.redhat.developers
  name: product-catalog
spec:
  port:
    targetPort: 8080
  to:
    kind: Service
    name: product-catalog
---