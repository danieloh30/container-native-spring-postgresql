apiVersion: v1
kind: DeploymentConfig
metadata:
  name: product-inventory
spec:
  triggers:
    -
      type: ConfigChange
    -
      type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - product-inventory
        from:
          kind: ImageStreamTag
          namespace: product
          name: 'product-inventory:latest'
  replicas: 1
  template:
    metadata:
      labels:
        app: product-inventory      
    spec:
      initContainers:
      - name: pem-to-truststore
        image: registry.access.redhat.com/redhat-sso-7/sso71-openshift:1.1-16
        env:
          - name: ca_bundle
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
          - name: truststore_jks
            value: /var/run/secrets/java.io/keystores/truststore.jks
          - name: password
            value: changeit    
        command: ['/bin/bash']
        args: ['-c', "csplit -z -f crt- $ca_bundle '/-----BEGIN CERTIFICATE-----/' '{*}' && for file in crt-*; do keytool -import -noprompt -keystore $truststore_jks -file $file -storepass changeit -alias service-$file; done"]
        volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores      
      containers:
        - name: product-inventory
          image: "product/product-inventory:latest"
          imagePullPolicy: Always
          env:     
          - name: JAVA_OPTIONS
            value: -Dspring.profiles.active=openshift -Djavax.net.ssl.trustStore=/var/run/secrets/java.io/keystores/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit                      
          - name: SSO_REALM
            valueFrom:
               configMapKeyRef:
                 name: keycloak-properties
                 key: realm
          - name: SSO_RESOURCE
            valueFrom:
               configMapKeyRef:
                 name: keycloak-properties
                 key: resource
          - name: SSO_REALM_KEY
            valueFrom:
               configMapKeyRef:
                 name: keycloak-properties
                 key: realm-key
          - name: SSO_AUTH_SERVER_URL
            valueFrom:
               configMapKeyRef:
                 name: keycloak-properties
                 key: auth-server-url
          - name: SSO_CREDENTIALS_SECRET
            valueFrom:
               configMapKeyRef:
                 name: keycloak-properties
                 key: credentails-secret 
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3 
          volumeMounts:
          - name: keystore-volume
            mountPath: /var/run/secrets/java.io/keystores            
      volumes:
      - name: keystore-volume
        emptyDir: {}              